/*-----------------------------------------------------------------------------
  Table of Contents
  - Vendor
  - Globals
  - Plugins
  - Pages
  - Parts
  - Components
-----------------------------------------------------------------------------*/
/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Change the default font family in all browsers (opinionated).
     * 2. Correct the line height in all browsers.
     * 3. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * Add the correct display in IE.
     */
main {
  display: block; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
     * Remove the outline on focused links when they are also active or hovered
     * in all browsers (opinionated).
     */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
     * Change the border, margin, and padding in all browsers (opinionated).
     */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

/*----------------------------------------------------------------------------
  Variables
----------------------------------------------------------------------------*/
/*
  (TEXT) PARAMS
  =================
  1. Namespace
  2. Intensity
  3. Text color
  4. Background color (flat)
  5. Highlight #1 color
  6. Highlight #2 color
  7. Width (px)
  8. Height (px)
*/
/*
* Ginger
* A minimal flexbox grid system named after a cute dog.
* Version 2.1.0
* Written by Eric Stout (@erwstout)
* http://ericwstout.com
*/
.container {
  position: relative;
  width: 100%;
  max-width: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  margin: 0 auto; }
  .container--wrap {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
  .container--direction-row {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row; }
  .container--justify-content-center {
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .container--justify-content-end {
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .container--justify-content-space-between {
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between; }
  .container--justify-content-space-around {
    -webkit-justify-content: space-around;
    -ms-flex-pack: distribute;
    justify-content: space-around; }
  .container--align-items-start {
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start; }
  .container--align-items-end {
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .container--align-items-baseline {
    -webkit-align-items: baseline;
    -ms-flex-align: baseline;
    align-items: baseline; }
  .container--align-items-stretch {
    -webkit-align-items: stretch;
    -ms-flex-align: stretch;
    align-items: stretch; }
  .container--align-content-center {
    -webkit-align-content: center;
    -ms-flex-line-pack: center;
    align-content: center; }
  .container--align-content-end {
    -webkit-align-content: flex-end;
    -ms-flex-line-pack: end;
    align-content: flex-end; }
  .container--align-content-space-between {
    -webkit-align-content: space-between;
    -ms-flex-line-pack: justify;
    align-content: space-between; }
  .container--align-content-space-around {
    -webkit-align-content: space-around;
    -ms-flex-line-pack: distribute;
    align-content: space-around; }
  .container--align-content-stretch {
    -webkit-align-content: stretch;
    -ms-flex-line-pack: stretch;
    align-content: stretch; }

.row {
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  width: 100%;
  max-width: 75rem;
  position: relative;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start; }
  .row--full-width {
    max-width: 100%; }
  .row--no-wrap {
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap; }
  .row--reverse {
    -webkit-flex-direction: row-reverse;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse; }
  .row--justify-content-center {
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .row--justify-content-start {
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start; }
  .row--justify-content-end {
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .row--justify-content-space-around {
    -webkit-justify-content: space-around;
    -ms-flex-pack: distribute;
    justify-content: space-around; }
  .row--align-items-start {
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start; }
  .row--align-items-center {
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .row--align-items-end {
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .row--align-items-baseline {
    -webkit-align-items: baseline;
    -ms-flex-align: baseline;
    align-items: baseline; }
  .row--align-items-stretch {
    -webkit-align-items: stretch;
    -ms-flex-align: stretch;
    align-items: stretch; }
  .row--align-content-center {
    -webkit-align-content: center;
    -ms-flex-line-pack: center;
    align-content: center; }
  .row--align-content-end {
    -webkit-align-content: flex-end;
    -ms-flex-line-pack: end;
    align-content: flex-end; }
  .row--align-content-space-between {
    -webkit-align-content: space-between;
    -ms-flex-line-pack: justify;
    align-content: space-between; }
  .row--align-content-space-around {
    -webkit-align-content: space-around;
    -ms-flex-line-pack: distribute;
    align-content: space-around; }
  .row--align-content-stretch {
    -webkit-align-content: stretch;
    -ms-flex-line-pack: stretch;
    align-content: stretch; }

.row .row {
  margin-left: -0.8rem;
  margin-right: -0.8rem;
  width: auto; }

*[class*="col-"], *[class*="sm-col-"], *[class*="md-col-"], *[class*="flex-basis-"], .col {
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  position: relative;
  box-sizing: border-box;
  padding-left: 0.8rem;
  padding-right: 0.8rem;
  min-width: 0; }

.col-1 {
  -webkit-flex-basis: 8.33333%;
  -ms-flex-preferred-size: 8.33333%;
  flex-basis: 8.33333%; }

.col-2 {
  -webkit-flex-basis: 16.66667%;
  -ms-flex-preferred-size: 16.66667%;
  flex-basis: 16.66667%; }

.col-3 {
  -webkit-flex-basis: 25.0%;
  -ms-flex-preferred-size: 25.0%;
  flex-basis: 25.0%; }

.col-4 {
  -webkit-flex-basis: 33.33333%;
  -ms-flex-preferred-size: 33.33333%;
  flex-basis: 33.33333%; }

.col-5 {
  -webkit-flex-basis: 41.66666%;
  -ms-flex-preferred-size: 41.66666%;
  flex-basis: 41.66666%; }

.col-6 {
  -webkit-flex-basis: 50.0%;
  -ms-flex-preferred-size: 50.0%;
  flex-basis: 50.0%; }

.col-7 {
  -webkit-flex-basis: 58.33333%;
  -ms-flex-preferred-size: 58.33333%;
  flex-basis: 58.33333%; }

.col-8 {
  -webkit-flex-basis: 66.66666%;
  -ms-flex-preferred-size: 66.66666%;
  flex-basis: 66.66666%; }

.col-9 {
  -webkit-flex-basis: 75.0%;
  -ms-flex-preferred-size: 75.0%;
  flex-basis: 75.0%; }

.col-10 {
  -webkit-flex-basis: 83.33333%;
  -ms-flex-preferred-size: 83.33333%;
  flex-basis: 83.33333%; }

.col-11 {
  -webkit-flex-basis: 91.66666%;
  -ms-flex-preferred-size: 91.66666%;
  flex-basis: 91.66666%; }

.col-12 {
  -webkit-flex-basis: 100.0%;
  -ms-flex-preferred-size: 100.0%;
  flex-basis: 100.0%; }

@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .col-1 {
    width: 8.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .col-2 {
    width: 16.66667%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .col-3 {
    width: 25.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .col-4 {
    width: 33.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .col-5 {
    width: 41.66666%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .col-6 {
    width: 50.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .col-7 {
    width: 58.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .col-8 {
    width: 66.66666%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .col-9 {
    width: 75.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .col-10 {
    width: 83.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .col-11 {
    width: 91.66666%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .col-12 {
    width: 100.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; } }

.col-grow {
  -webkit-flex: 1 1 100.0%;
  -ms-flex: 1 1 100.0%;
  flex: 1 1 100.0%; }

.col-no-pad {
  padding-left: 0;
  padding-right: 0; }

@media screen and (max-width: 64em) {
  .md-col-1 {
    -webkit-flex-basis: 8.33333%;
    -ms-flex-preferred-size: 8.33333%;
    flex-basis: 8.33333%; }
  .md-col-2 {
    -webkit-flex-basis: 16.66667%;
    -ms-flex-preferred-size: 16.66667%;
    flex-basis: 16.66667%; }
  .md-col-3 {
    -webkit-flex-basis: 25.0%;
    -ms-flex-preferred-size: 25.0%;
    flex-basis: 25.0%; }
  .md-col-4 {
    -webkit-flex-basis: 33.33333%;
    -ms-flex-preferred-size: 33.33333%;
    flex-basis: 33.33333%; }
  .md-col-5 {
    -webkit-flex-basis: 41.66666%;
    -ms-flex-preferred-size: 41.66666%;
    flex-basis: 41.66666%; }
  .md-col-6 {
    -webkit-flex-basis: 50.0%;
    -ms-flex-preferred-size: 50.0%;
    flex-basis: 50.0%; }
  .md-col-7 {
    -webkit-flex-basis: 58.33333%;
    -ms-flex-preferred-size: 58.33333%;
    flex-basis: 58.33333%; }
  .md-col-8 {
    -webkit-flex-basis: 66.66666%;
    -ms-flex-preferred-size: 66.66666%;
    flex-basis: 66.66666%; }
  .md-col-9 {
    -webkit-flex-basis: 75.0%;
    -ms-flex-preferred-size: 75.0%;
    flex-basis: 75.0%; }
  .md-col-10 {
    -webkit-flex-basis: 83.33333%;
    -ms-flex-preferred-size: 83.33333%;
    flex-basis: 83.33333%; }
  .md-col-11 {
    -webkit-flex-basis: 91.66666%;
    -ms-flex-preferred-size: 91.66666%;
    flex-basis: 91.66666%; }
  .md-col-12 {
    -webkit-flex-basis: 100.0%;
    -ms-flex-preferred-size: 100.0%;
    flex-basis: 100.0%; } }

@media screen and (max-width: 64em) and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .md-col-1 {
    width: 8.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .md-col-2 {
    width: 16.66667%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .md-col-3 {
    width: 25.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .md-col-4 {
    width: 33.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .md-col-5 {
    width: 41.66666%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .md-col-6 {
    width: 50.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .md-col-7 {
    width: 58.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .md-col-8 {
    width: 66.66666%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .md-col-9 {
    width: 75.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .md-col-10 {
    width: 83.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .md-col-11 {
    width: 91.66666%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .md-col-12 {
    width: 100.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; } }

@media screen and (max-width: 47.9375em) {
  *[class*="col-"] {
    -webkit-flex: 1 1 100.0%;
    -ms-flex: 1 1 100.0%;
    flex: 1 1 100.0%;
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%; }
  .sm-col-1 {
    -webkit-flex-basis: 8.33333%;
    -ms-flex-preferred-size: 8.33333%;
    flex-basis: 8.33333%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; }
  .sm-col-2 {
    -webkit-flex-basis: 16.66667%;
    -ms-flex-preferred-size: 16.66667%;
    flex-basis: 16.66667%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; }
  .sm-col-3 {
    -webkit-flex-basis: 25.0%;
    -ms-flex-preferred-size: 25.0%;
    flex-basis: 25.0%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; }
  .sm-col-4 {
    -webkit-flex-basis: 33.33333%;
    -ms-flex-preferred-size: 33.33333%;
    flex-basis: 33.33333%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; }
  .sm-col-5 {
    -webkit-flex-basis: 41.66666%;
    -ms-flex-preferred-size: 41.66666%;
    flex-basis: 41.66666%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; }
  .sm-col-6 {
    -webkit-flex-basis: 50.0%;
    -ms-flex-preferred-size: 50.0%;
    flex-basis: 50.0%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; }
  .sm-col-7 {
    -webkit-flex-basis: 58.33333%;
    -ms-flex-preferred-size: 58.33333%;
    flex-basis: 58.33333%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; }
  .sm-col-8 {
    -webkit-flex-basis: 66.66666%;
    -ms-flex-preferred-size: 66.66666%;
    flex-basis: 66.66666%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; }
  .sm-col-9 {
    -webkit-flex-basis: 75.0%;
    -ms-flex-preferred-size: 75.0%;
    flex-basis: 75.0%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; }
  .sm-col-10 {
    -webkit-flex-basis: 83.33333%;
    -ms-flex-preferred-size: 83.33333%;
    flex-basis: 83.33333%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; }
  .sm-col-11 {
    -webkit-flex-basis: 91.66666%;
    -ms-flex-preferred-size: 91.66666%;
    flex-basis: 91.66666%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; }
  .sm-col-12 {
    -webkit-flex-basis: 100.0%;
    -ms-flex-preferred-size: 100.0%;
    flex-basis: 100.0%;
    -webkit-flex-grow: 0;
    -ms-flex-positive: 0;
    flex-grow: 0; } }

@media screen and (max-width: 47.9375em) and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .sm-col-1 {
    width: 8.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .sm-col-2 {
    width: 16.66667%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .sm-col-3 {
    width: 25.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .sm-col-4 {
    width: 33.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .sm-col-5 {
    width: 41.66666%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .sm-col-6 {
    width: 50.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .sm-col-7 {
    width: 58.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .sm-col-8 {
    width: 66.66666%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .sm-col-9 {
    width: 75.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .sm-col-10 {
    width: 83.33333%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .sm-col-11 {
    width: 91.66666%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; }
  .sm-col-12 {
    width: 100.0%;
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto; } }

@media screen and (min-width: 48em) {
  .offset-1 {
    margin-left: 8.33333%; }
  .offset-2 {
    margin-left: 16.66667%; }
  .offset-3 {
    margin-left: 25.0%; }
  .offset-4 {
    margin-left: 33.33333%; }
  .offset-5 {
    margin-left: 41.66666%; }
  .offset-6 {
    margin-left: 50.0%; }
  .offset-7 {
    margin-left: 58.33333%; }
  .offset-8 {
    margin-left: 66.66666%; }
  .offset-9 {
    margin-left: 75.0%; }
  .offset-10 {
    margin-left: 83.33333%; }
  .offset-11 {
    margin-left: 91.66666%; } }

.block-grid--justify-content-center {
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

.block-grid--justify-content-start {
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start; }

.block-grid--justify-content-space-around {
  -webkit-justify-content: space-around;
  -ms-flex-pack: distribute;
  justify-content: space-around; }

.block-grid--justify-content-end {
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }

.block-grid-1 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-1 .col {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%; }

.block-grid-2 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-2 .col {
    -webkit-flex-basis: 50%;
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%; }

.block-grid-3 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-3 .col {
    -webkit-flex-basis: 33.33333%;
    -ms-flex-preferred-size: 33.33333%;
    flex-basis: 33.33333%; }

.block-grid-4 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-4 .col {
    -webkit-flex-basis: 25%;
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%; }

.block-grid-5 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-5 .col {
    -webkit-flex-basis: 20%;
    -ms-flex-preferred-size: 20%;
    flex-basis: 20%; }

.block-grid-6 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-6 .col {
    -webkit-flex-basis: 16.66667%;
    -ms-flex-preferred-size: 16.66667%;
    flex-basis: 16.66667%; }

.block-grid-7 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-7 .col {
    -webkit-flex-basis: 14.28571%;
    -ms-flex-preferred-size: 14.28571%;
    flex-basis: 14.28571%; }

.block-grid-8 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-8 .col {
    -webkit-flex-basis: 12.5%;
    -ms-flex-preferred-size: 12.5%;
    flex-basis: 12.5%; }

.block-grid-9 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-9 .col {
    -webkit-flex-basis: 11.11111%;
    -ms-flex-preferred-size: 11.11111%;
    flex-basis: 11.11111%; }

.block-grid-10 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-10 .col {
    -webkit-flex-basis: 10%;
    -ms-flex-preferred-size: 10%;
    flex-basis: 10%; }

.block-grid-11 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-11 .col {
    -webkit-flex-basis: 9.09091%;
    -ms-flex-preferred-size: 9.09091%;
    flex-basis: 9.09091%; }

.block-grid-12 {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }
  .block-grid-12 .col {
    -webkit-flex-basis: 8.33333%;
    -ms-flex-preferred-size: 8.33333%;
    flex-basis: 8.33333%; }

@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .block-grid-1 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-1 .col {
      width: 100%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .block-grid-2 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-2 .col {
      width: 50%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .block-grid-3 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-3 .col {
      width: 33.33333%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .block-grid-4 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-4 .col {
      width: 25%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .block-grid-5 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-5 .col {
      width: 20%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .block-grid-6 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-6 .col {
      width: 16.66667%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .block-grid-7 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-7 .col {
      width: 14.28571%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .block-grid-8 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-8 .col {
      width: 12.5%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .block-grid-9 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-9 .col {
      width: 11.11111%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .block-grid-10 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-10 .col {
      width: 10%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .block-grid-11 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-11 .col {
      width: 9.09091%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .block-grid-12 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .block-grid-12 .col {
      width: 8.33333%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; } }

@media screen and (max-width: 64em) {
  .md-block-grid-1 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-1 .col {
      -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
      flex-basis: 100%; }
  .md-block-grid-2 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-2 .col {
      -webkit-flex-basis: 50%;
      -ms-flex-preferred-size: 50%;
      flex-basis: 50%; }
  .md-block-grid-3 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-3 .col {
      -webkit-flex-basis: 33.33333%;
      -ms-flex-preferred-size: 33.33333%;
      flex-basis: 33.33333%; }
  .md-block-grid-4 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-4 .col {
      -webkit-flex-basis: 25%;
      -ms-flex-preferred-size: 25%;
      flex-basis: 25%; }
  .md-block-grid-5 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-5 .col {
      -webkit-flex-basis: 20%;
      -ms-flex-preferred-size: 20%;
      flex-basis: 20%; }
  .md-block-grid-6 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-6 .col {
      -webkit-flex-basis: 16.66667%;
      -ms-flex-preferred-size: 16.66667%;
      flex-basis: 16.66667%; }
  .md-block-grid-7 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-7 .col {
      -webkit-flex-basis: 14.28571%;
      -ms-flex-preferred-size: 14.28571%;
      flex-basis: 14.28571%; }
  .md-block-grid-8 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-8 .col {
      -webkit-flex-basis: 12.5%;
      -ms-flex-preferred-size: 12.5%;
      flex-basis: 12.5%; }
  .md-block-grid-9 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-9 .col {
      -webkit-flex-basis: 11.11111%;
      -ms-flex-preferred-size: 11.11111%;
      flex-basis: 11.11111%; }
  .md-block-grid-10 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-10 .col {
      -webkit-flex-basis: 10%;
      -ms-flex-preferred-size: 10%;
      flex-basis: 10%; }
  .md-block-grid-11 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-11 .col {
      -webkit-flex-basis: 9.09091%;
      -ms-flex-preferred-size: 9.09091%;
      flex-basis: 9.09091%; }
  .md-block-grid-12 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-12 .col {
      -webkit-flex-basis: 8.33333%;
      -ms-flex-preferred-size: 8.33333%;
      flex-basis: 8.33333%; } }

@media screen and (max-width: 64em) and (-ms-high-contrast: active) {
  .md-block-grid-1 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-1 .col {
      width: 100%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .md-block-grid-2 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-2 .col {
      width: 50%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .md-block-grid-3 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-3 .col {
      width: 33.33333%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .md-block-grid-4 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-4 .col {
      width: 25%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .md-block-grid-5 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-5 .col {
      width: 20%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .md-block-grid-6 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-6 .col {
      width: 16.66667%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .md-block-grid-7 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-7 .col {
      width: 14.28571%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .md-block-grid-8 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-8 .col {
      width: 12.5%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .md-block-grid-9 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-9 .col {
      width: 11.11111%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .md-block-grid-10 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-10 .col {
      width: 10%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .md-block-grid-11 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-11 .col {
      width: 9.09091%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .md-block-grid-12 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .md-block-grid-12 .col {
      width: 8.33333%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; } }

@media screen and (max-width: 47.9375em) {
  .sm-block-grid-1 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-1 .col {
      -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
      flex-basis: 100%; }
  .sm-block-grid-2 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-2 .col {
      -webkit-flex-basis: 50%;
      -ms-flex-preferred-size: 50%;
      flex-basis: 50%; }
  .sm-block-grid-3 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-3 .col {
      -webkit-flex-basis: 33.33333%;
      -ms-flex-preferred-size: 33.33333%;
      flex-basis: 33.33333%; }
  .sm-block-grid-4 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-4 .col {
      -webkit-flex-basis: 25%;
      -ms-flex-preferred-size: 25%;
      flex-basis: 25%; }
  .sm-block-grid-5 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-5 .col {
      -webkit-flex-basis: 20%;
      -ms-flex-preferred-size: 20%;
      flex-basis: 20%; }
  .sm-block-grid-6 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-6 .col {
      -webkit-flex-basis: 16.66667%;
      -ms-flex-preferred-size: 16.66667%;
      flex-basis: 16.66667%; }
  .sm-block-grid-7 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-7 .col {
      -webkit-flex-basis: 14.28571%;
      -ms-flex-preferred-size: 14.28571%;
      flex-basis: 14.28571%; }
  .sm-block-grid-8 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-8 .col {
      -webkit-flex-basis: 12.5%;
      -ms-flex-preferred-size: 12.5%;
      flex-basis: 12.5%; }
  .sm-block-grid-9 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-9 .col {
      -webkit-flex-basis: 11.11111%;
      -ms-flex-preferred-size: 11.11111%;
      flex-basis: 11.11111%; }
  .sm-block-grid-10 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-10 .col {
      -webkit-flex-basis: 10%;
      -ms-flex-preferred-size: 10%;
      flex-basis: 10%; }
  .sm-block-grid-11 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-11 .col {
      -webkit-flex-basis: 9.09091%;
      -ms-flex-preferred-size: 9.09091%;
      flex-basis: 9.09091%; }
  .sm-block-grid-12 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-12 .col {
      -webkit-flex-basis: 8.33333%;
      -ms-flex-preferred-size: 8.33333%;
      flex-basis: 8.33333%; } }

@media screen and (max-width: 47.9375em) and (-ms-high-contrast: active) {
  .sm-block-grid-1 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-1 .col {
      width: 100%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .sm-block-grid-2 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-2 .col {
      width: 50%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .sm-block-grid-3 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-3 .col {
      width: 33.33333%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .sm-block-grid-4 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-4 .col {
      width: 25%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .sm-block-grid-5 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-5 .col {
      width: 20%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .sm-block-grid-6 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-6 .col {
      width: 16.66667%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .sm-block-grid-7 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-7 .col {
      width: 14.28571%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .sm-block-grid-8 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-8 .col {
      width: 12.5%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .sm-block-grid-9 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-9 .col {
      width: 11.11111%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .sm-block-grid-10 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-10 .col {
      width: 10%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .sm-block-grid-11 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-11 .col {
      width: 9.09091%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; }
  .sm-block-grid-12 {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .sm-block-grid-12 .col {
      width: 8.33333%;
      -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
      flex-basis: auto; } }

.hide {
  display: none !important; }

.sm-only {
  display: none !important; }

.md-only {
  display: none !important; }

.lg-only {
  display: -webkit-flex !important;
  display: -ms-flexbox !important;
  display: flex !important; }
  .lg-only--block {
    display: block !important; }
  .lg-only--inline-block {
    display: inline-block !important; }
  .lg-only--inline-flex {
    display: -webkit-inline-flex !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important; }

@media screen and (min-width: 47.9375em) and (max-width: 64em) {
  .sm-only {
    display: none !important; }
  .md-only {
    display: -webkit-flex !important;
    display: -ms-flexbox !important;
    display: flex !important; }
    .md-only--block {
      display: block !important; }
    .md-only--inline-block {
      display: inline-block !important; }
    .md-only--inline-flex {
      display: -webkit-inline-flex !important;
      display: -ms-inline-flexbox !important;
      display: inline-flex !important; }
  .lg-only {
    display: none !important; }
  .md-hide {
    display: none !important; }
  .md-hide-down {
    display: none !important; } }

@media screen and (max-width: 47.9375em) {
  .sm-only {
    display: -webkit-flex !important;
    display: -ms-flexbox !important;
    display: flex !important; }
    .sm-only--block {
      display: block !important; }
    .sm-only--inline-block {
      display: inline-block !important; }
    .sm-only--inline-flex {
      display: -webkit-inline-flex !important;
      display: -ms-inline-flexbox !important;
      display: inline-flex !important; }
  .md-only {
    display: none !important; }
  .md-hide-down {
    display: none !important; }
  .lg-only {
    display: none !important; }
  .sm-hide {
    display: none !important; } }

.text-left {
  text-align: left; }

.text-center {
  text-align: center; }

.text-right {
  text-align: right; }

.col-centered {
  margin: 0 auto; }

.col-right {
  margin: 0 0 0 auto; }

.stretch {
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  -ms-grid-row-align: stretch;
  align-self: stretch; }

@media screen and (max-width: 64em) {
  .md-text-left {
    text-align: left; }
  .md-text-center {
    text-align: center; }
  .md-text-right {
    text-align: right; }
  .md-col-center {
    margin: 0 auto; } }

@media screen and (max-width: 47.9375em) {
  .sm-text-left {
    text-align: left; }
  .sm-text-center {
    text-align: center; }
  .sm-text-right {
    text-align: right; }
  .sm-col-center, .sm-col-centered {
    margin: 0 auto; } }

/*
Nifty Nav
By Eric Stout / Factor1
http://factor1studios.com
*/
header.nifty-nav-header {
  z-index: 9999; }

.nifty-panel {
  position: relative;
  max-height: 100vh;
  width: 100%;
  border: 0;
  padding: 0;
  background: #e5e5e5;
  top: 76px;
  display: none;
  z-index: 9999;
  overflow-y: scroll;
  margin-bottom: 0;
  padding-bottom: 0;
  -ms-overflow-style: none;
  /* hides the scrollbars for Internet Explorer on the panel */ }

.nifty-mask {
  background: rgba(0, 0, 0, 0.62);
  height: 100%;
  width: 100%;
  z-index: 9998;
  position: fixed;
  top: 0;
  opacity: 0; }

#nifty-nav-toggle {
  width: 40px;
  height: 40px;
  display: block;
  background: none;
  position: absolute;
  transition: all .3s ease;
  top: 15px;
  left: 15px; }

#nifty-nav-toggle span, #nifty-nav-toggle span:before, #nifty-nav-toggle span:after {
  cursor: pointer;
  border-radius: 1px;
  height: 3px;
  width: 30px;
  background: #ababab;
  position: absolute;
  top: 21px;
  right: 0px;
  display: block;
  content: ''; }

#nifty-nav-toggle span:before {
  top: -8px; }

#nifty-nav-toggle span:after {
  bottom: -8px;
  top: 8px; }

#nifty-nav-toggle span, #nifty-nav-toggle span:before, #nifty-nav-toggle span:after {
  transition: all 500ms ease-in-out; }

#nifty-nav-toggle.nifty-active span {
  background-color: transparent; }

#nifty-nav-toggle.nifty-active span:before, #nifty-nav-toggle.nifty-active span:after {
  top: 0; }

#nifty-nav-toggle.nifty-active span:before {
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  -webkit-transform: rotate(45deg); }

#nifty-nav-toggle.nifty-active span:after {
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
  -webkit-transform: rotate(-45deg); }

#nifty-nav-toggle:hover {
  opacity: .5; }

#nifty-nav-toggle.nifty-active span:before, #nifty-nav-toggle.nifty-active span:after {
  background: #ababab; }

.nifty-lock {
  overflow: hidden; }

/*------------------------------------------------------------------------------
  Global Styles
------------------------------------------------------------------------------*/
/* Set box sizing to elimate math in the padding */
* {
  box-sizing: border-box; }

html,
body {
  border: 0;
  margin: 0;
  padding: 0;
  width: 100%;
  min-height: 100%; }

html,
html a {
  -webkit-font-smoothing: antialiased !important;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004); }

body {
  font: 100%/1.25 "Roboto Condensed", arial, helvetica, sans-serif;
  min-height: 100%;
  overflow-y: scroll;
  /* has to be scroll, not auto */
  -webkit-overflow-scrolling: touch;
  background-size: cover; }

@media screen and (max-width: 47.9375em) {
  body {
    background-size: 400px 800px;
    max-width: 100vw;
    overflow-x: hidden; } }

p:empty {
  display: none !important; }

table {
  margin: 0 0 18px; }

/* keep images from spilling out of columns */
img {
  max-width: 100%;
  height: auto; }

.flex-video {
  position: relative;
  height: 0;
  padding-top: 0;
  padding-bottom: 56.25%;
  margin-bottom: 1rem;
  overflow: hidden; }
  .flex-video iframe, .flex-video object, .flex-video embed, .flex-video video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }

/*------------------------------------------------------------------------------
  WordPress CSS - https://codex.wordpress.org/CSS#WordPress_Generated_Classes
------------------------------------------------------------------------------*/
.alignnone {
  margin: 5px 20px 20px 0; }

.aligncenter,
div.aligncenter {
  display: block;
  margin: 5px auto; }

.alignright {
  float: right;
  margin: 5px 0 20px 20px; }

.alignleft {
  float: left;
  margin: 5px 20px 20px 0; }

a img.alignright {
  float: right;
  margin: 5px 0 20px 20px; }

a img.alignnone {
  margin: 5px 20px 20px 0; }

a img.alignleft {
  float: left;
  margin: 5px 20px 20px 0; }

a img.aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto; }

.wp-caption {
  background: #fff;
  border: 1px solid #f0f0f0;
  max-width: 96%;
  /* Image does not overflow the content area */
  padding: 5px 3px 10px;
  text-align: center; }

.wp-caption.alignnone {
  margin: 5px 20px 20px 0; }

.wp-caption.alignleft {
  margin: 5px 20px 20px 0; }

.wp-caption.alignright {
  margin: 5px 0 20px 20px; }

.wp-caption img {
  border: 0 none;
  height: auto;
  margin: 0;
  max-width: 98.5%;
  padding: 0;
  width: auto; }

.wp-caption p.wp-caption-text {
  font-size: 11px;
  line-height: 17px;
  margin: 0;
  padding: 0 4px 5px; }

/* Text meant only for screen readers. */
.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden; }

.screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  color: #21759b;
  display: block;
  font-size: 14px;
  font-size: .875rem;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
  /* Above WP toolbar. */ }

/*------------------------------------------------------------------------------
  Typography
------------------------------------------------------------------------------*/
a,
a:visited {
  text-decoration: none;
  color: #aacf38; }

h1 {
  font-size: 3em;
  text-transform: uppercase; }

h2 {
  font-size: 2em;
  text-transform: uppercase; }

h3 {
  font-size: 1.25em;
  text-transform: uppercase; }

p {
  font-size: 16px; }

.glitch {
  position: relative; }

@-webkit-keyframes noise-anim {
  0% {
<<<<<<< HEAD
<<<<<<< HEAD
    clip: rect(60px, 9999px, 70px, 0); }
=======
    clip: rect(84px, 9999px, 97px, 0); }
  5% {
    clip: rect(67px, 9999px, 11px, 0); }
  10% {
    clip: rect(63px, 9999px, 83px, 0); }
  15% {
    clip: rect(88px, 9999px, 8px, 0); }
  20% {
    clip: rect(52px, 9999px, 66px, 0); }
  25% {
    clip: rect(64px, 9999px, 26px, 0); }
  30% {
    clip: rect(37px, 9999px, 27px, 0); }
  35% {
    clip: rect(5px, 9999px, 93px, 0); }
  40% {
    clip: rect(91px, 9999px, 32px, 0); }
  45% {
    clip: rect(86px, 9999px, 86px, 0); }
  50% {
    clip: rect(2px, 9999px, 10px, 0); }
  55% {
    clip: rect(50px, 9999px, 73px, 0); }
  60% {
    clip: rect(77px, 9999px, 25px, 0); }
  65% {
    clip: rect(13px, 9999px, 2px, 0); }
  70% {
    clip: rect(63px, 9999px, 34px, 0); }
  75% {
    clip: rect(21px, 9999px, 76px, 0); }
  80% {
    clip: rect(46px, 9999px, 5px, 0); }
  85% {
    clip: rect(6px, 9999px, 41px, 0); }
  90% {
    clip: rect(4px, 9999px, 72px, 0); }
  95% {
    clip: rect(66px, 9999px, 58px, 0); }
  100% {
    clip: rect(22px, 9999px, 22px, 0); } }

@keyframes noise-anim {
  0% {
    clip: rect(84px, 9999px, 97px, 0); }
  5% {
    clip: rect(67px, 9999px, 11px, 0); }
  10% {
    clip: rect(63px, 9999px, 83px, 0); }
  15% {
    clip: rect(88px, 9999px, 8px, 0); }
  20% {
    clip: rect(52px, 9999px, 66px, 0); }
  25% {
    clip: rect(64px, 9999px, 26px, 0); }
  30% {
    clip: rect(37px, 9999px, 27px, 0); }
  35% {
    clip: rect(5px, 9999px, 93px, 0); }
  40% {
    clip: rect(91px, 9999px, 32px, 0); }
  45% {
    clip: rect(86px, 9999px, 86px, 0); }
  50% {
    clip: rect(2px, 9999px, 10px, 0); }
  55% {
    clip: rect(50px, 9999px, 73px, 0); }
  60% {
    clip: rect(77px, 9999px, 25px, 0); }
  65% {
    clip: rect(13px, 9999px, 2px, 0); }
  70% {
    clip: rect(63px, 9999px, 34px, 0); }
  75% {
    clip: rect(21px, 9999px, 76px, 0); }
  80% {
    clip: rect(46px, 9999px, 5px, 0); }
  85% {
    clip: rect(6px, 9999px, 41px, 0); }
  90% {
    clip: rect(4px, 9999px, 72px, 0); }
  95% {
    clip: rect(66px, 9999px, 58px, 0); }
  100% {
    clip: rect(22px, 9999px, 22px, 0); } }
=======
    clip: rect(55px, 9999px, 59px, 0); }
>>>>>>> develop
  5% {
    clip: rect(10px, 9999px, 32px, 0); }
  10% {
    clip: rect(29px, 9999px, 65px, 0); }
  15% {
    clip: rect(48px, 9999px, 63px, 0); }
  20% {
    clip: rect(2px, 9999px, 55px, 0); }
  25% {
    clip: rect(97px, 9999px, 90px, 0); }
  30% {
    clip: rect(35px, 9999px, 35px, 0); }
  35% {
    clip: rect(55px, 9999px, 68px, 0); }
  40% {
    clip: rect(18px, 9999px, 12px, 0); }
  45% {
    clip: rect(85px, 9999px, 20px, 0); }
  50% {
    clip: rect(53px, 9999px, 72px, 0); }
  55% {
    clip: rect(5px, 9999px, 20px, 0); }
  60% {
    clip: rect(42px, 9999px, 69px, 0); }
  65% {
    clip: rect(67px, 9999px, 47px, 0); }
  70% {
    clip: rect(28px, 9999px, 57px, 0); }
  75% {
    clip: rect(70px, 9999px, 48px, 0); }
  80% {
    clip: rect(95px, 9999px, 62px, 0); }
  85% {
    clip: rect(90px, 9999px, 92px, 0); }
  90% {
    clip: rect(7px, 9999px, 89px, 0); }
  95% {
    clip: rect(10px, 9999px, 73px, 0); }
  100% {
    clip: rect(19px, 9999px, 11px, 0); } }

@keyframes noise-anim {
  0% {
    clip: rect(55px, 9999px, 59px, 0); }
  5% {
    clip: rect(10px, 9999px, 32px, 0); }
  10% {
    clip: rect(29px, 9999px, 65px, 0); }
  15% {
    clip: rect(48px, 9999px, 63px, 0); }
  20% {
    clip: rect(2px, 9999px, 55px, 0); }
  25% {
    clip: rect(97px, 9999px, 90px, 0); }
  30% {
    clip: rect(35px, 9999px, 35px, 0); }
  35% {
    clip: rect(55px, 9999px, 68px, 0); }
  40% {
    clip: rect(18px, 9999px, 12px, 0); }
  45% {
    clip: rect(85px, 9999px, 20px, 0); }
  50% {
    clip: rect(53px, 9999px, 72px, 0); }
  55% {
    clip: rect(5px, 9999px, 20px, 0); }
  60% {
    clip: rect(42px, 9999px, 69px, 0); }
  65% {
    clip: rect(67px, 9999px, 47px, 0); }
  70% {
    clip: rect(28px, 9999px, 57px, 0); }
  75% {
    clip: rect(70px, 9999px, 48px, 0); }
  80% {
    clip: rect(95px, 9999px, 62px, 0); }
  85% {
    clip: rect(90px, 9999px, 92px, 0); }
  90% {
    clip: rect(7px, 9999px, 89px, 0); }
  95% {
    clip: rect(10px, 9999px, 73px, 0); }
  100% {
<<<<<<< HEAD
    clip: rect(11px, 9999px, 12px, 0); } }
=======
    clip: rect(20px, 9999px, 68px, 0); }
  5% {
    clip: rect(74px, 9999px, 82px, 0); }
  10% {
    clip: rect(71px, 9999px, 6px, 0); }
  15% {
    clip: rect(97px, 9999px, 20px, 0); }
  20% {
    clip: rect(51px, 9999px, 63px, 0); }
  25% {
    clip: rect(77px, 9999px, 39px, 0); }
  30% {
    clip: rect(100px, 9999px, 84px, 0); }
  35% {
    clip: rect(94px, 9999px, 87px, 0); }
  40% {
    clip: rect(53px, 9999px, 82px, 0); }
  45% {
    clip: rect(21px, 9999px, 92px, 0); }
  50% {
    clip: rect(93px, 9999px, 39px, 0); }
  55% {
    clip: rect(94px, 9999px, 27px, 0); }
  60% {
    clip: rect(73px, 9999px, 5px, 0); }
  65% {
    clip: rect(81px, 9999px, 83px, 0); }
  70% {
    clip: rect(33px, 9999px, 96px, 0); }
  75% {
    clip: rect(21px, 9999px, 27px, 0); }
  80% {
    clip: rect(58px, 9999px, 99px, 0); }
  85% {
    clip: rect(31px, 9999px, 61px, 0); }
  90% {
    clip: rect(76px, 9999px, 17px, 0); }
  95% {
    clip: rect(37px, 9999px, 39px, 0); }
  100% {
    clip: rect(67px, 9999px, 7px, 0); } }
=======
    clip: rect(19px, 9999px, 11px, 0); } }
>>>>>>> timeline

.glitch:after {
  content: attr(data-text);
  position: absolute;
  left: 2px;
  text-shadow: -1px 0 magenta;
  top: 0;
  color: white;
  background: black;
  overflow: hidden;
  clip: rect(0, 900px, 0, 0);
  -webkit-animation: noise-anim 2s infinite linear alternate-reverse;
  animation: noise-anim 2s infinite linear alternate-reverse; }

@-webkit-keyframes noise-anim-2 {
  0% {
<<<<<<< HEAD
    clip: rect(52px, 9999px, 15px, 0); }
  5% {
    clip: rect(66px, 9999px, 71px, 0); }
  10% {
    clip: rect(70px, 9999px, 5px, 0); }
  15% {
    clip: rect(14px, 9999px, 100px, 0); }
  20% {
    clip: rect(53px, 9999px, 97px, 0); }
  25% {
    clip: rect(12px, 9999px, 34px, 0); }
  30% {
    clip: rect(76px, 9999px, 46px, 0); }
  35% {
    clip: rect(24px, 9999px, 16px, 0); }
  40% {
    clip: rect(71px, 9999px, 65px, 0); }
  45% {
    clip: rect(65px, 9999px, 15px, 0); }
  50% {
    clip: rect(5px, 9999px, 27px, 0); }
  55% {
    clip: rect(38px, 9999px, 87px, 0); }
  60% {
    clip: rect(54px, 9999px, 8px, 0); }
  65% {
    clip: rect(81px, 9999px, 83px, 0); }
  70% {
    clip: rect(18px, 9999px, 21px, 0); }
  75% {
    clip: rect(87px, 9999px, 6px, 0); }
  80% {
    clip: rect(72px, 9999px, 17px, 0); }
  85% {
    clip: rect(58px, 9999px, 65px, 0); }
  90% {
    clip: rect(8px, 9999px, 28px, 0); }
  95% {
    clip: rect(35px, 9999px, 34px, 0); }
  100% {
    clip: rect(97px, 9999px, 76px, 0); } }
>>>>>>> develop

@keyframes noise-anim {
  0% {
<<<<<<< HEAD
    clip: rect(20px, 9999px, 68px, 0); }
  5% {
    clip: rect(74px, 9999px, 82px, 0); }
  10% {
    clip: rect(71px, 9999px, 6px, 0); }
  15% {
    clip: rect(97px, 9999px, 20px, 0); }
  20% {
    clip: rect(51px, 9999px, 63px, 0); }
  25% {
    clip: rect(77px, 9999px, 39px, 0); }
  30% {
    clip: rect(100px, 9999px, 84px, 0); }
  35% {
    clip: rect(94px, 9999px, 87px, 0); }
  40% {
    clip: rect(53px, 9999px, 82px, 0); }
  45% {
    clip: rect(21px, 9999px, 92px, 0); }
  50% {
    clip: rect(93px, 9999px, 39px, 0); }
  55% {
    clip: rect(94px, 9999px, 27px, 0); }
  60% {
    clip: rect(73px, 9999px, 5px, 0); }
  65% {
    clip: rect(81px, 9999px, 83px, 0); }
  70% {
    clip: rect(33px, 9999px, 96px, 0); }
  75% {
    clip: rect(21px, 9999px, 27px, 0); }
  80% {
    clip: rect(58px, 9999px, 99px, 0); }
  85% {
    clip: rect(31px, 9999px, 61px, 0); }
  90% {
    clip: rect(76px, 9999px, 17px, 0); }
  95% {
    clip: rect(37px, 9999px, 39px, 0); }
  100% {
    clip: rect(67px, 9999px, 7px, 0); } }
>>>>>>> develop

.glitch:after {
  content: attr(data-text);
  position: absolute;
  left: 2px;
  text-shadow: -1px 0 magenta;
  top: 0;
  color: white;
  background: black;
  overflow: hidden;
  clip: rect(0, 900px, 0, 0);
  -webkit-animation: noise-anim 2s infinite linear alternate-reverse;
  animation: noise-anim 2s infinite linear alternate-reverse; }

@-webkit-keyframes noise-anim-2 {
  0% {
<<<<<<< HEAD
    clip: rect(25px, 9999px, 1px, 0); }
=======
    clip: rect(52px, 9999px, 15px, 0); }
  5% {
    clip: rect(66px, 9999px, 71px, 0); }
  10% {
    clip: rect(70px, 9999px, 5px, 0); }
  15% {
    clip: rect(14px, 9999px, 100px, 0); }
  20% {
    clip: rect(53px, 9999px, 97px, 0); }
  25% {
    clip: rect(12px, 9999px, 34px, 0); }
  30% {
    clip: rect(76px, 9999px, 46px, 0); }
  35% {
    clip: rect(24px, 9999px, 16px, 0); }
  40% {
    clip: rect(71px, 9999px, 65px, 0); }
  45% {
    clip: rect(65px, 9999px, 15px, 0); }
  50% {
    clip: rect(5px, 9999px, 27px, 0); }
  55% {
    clip: rect(38px, 9999px, 87px, 0); }
  60% {
    clip: rect(54px, 9999px, 8px, 0); }
  65% {
    clip: rect(81px, 9999px, 83px, 0); }
  70% {
    clip: rect(18px, 9999px, 21px, 0); }
  75% {
    clip: rect(87px, 9999px, 6px, 0); }
  80% {
    clip: rect(72px, 9999px, 17px, 0); }
  85% {
    clip: rect(58px, 9999px, 65px, 0); }
  90% {
    clip: rect(8px, 9999px, 28px, 0); }
  95% {
    clip: rect(35px, 9999px, 34px, 0); }
  100% {
    clip: rect(97px, 9999px, 76px, 0); } }
=======
    clip: rect(89px, 9999px, 15px, 0); }
>>>>>>> develop
  5% {
    clip: rect(62px, 9999px, 50px, 0); }
  10% {
    clip: rect(22px, 9999px, 50px, 0); }
  15% {
    clip: rect(60px, 9999px, 63px, 0); }
  20% {
    clip: rect(79px, 9999px, 53px, 0); }
  25% {
    clip: rect(7px, 9999px, 75px, 0); }
  30% {
    clip: rect(70px, 9999px, 52px, 0); }
  35% {
    clip: rect(55px, 9999px, 82px, 0); }
  40% {
    clip: rect(36px, 9999px, 62px, 0); }
  45% {
    clip: rect(17px, 9999px, 21px, 0); }
  50% {
    clip: rect(22px, 9999px, 87px, 0); }
  55% {
    clip: rect(46px, 9999px, 24px, 0); }
  60% {
    clip: rect(45px, 9999px, 70px, 0); }
  65% {
    clip: rect(78px, 9999px, 43px, 0); }
  70% {
    clip: rect(90px, 9999px, 74px, 0); }
  75% {
    clip: rect(100px, 9999px, 42px, 0); }
  80% {
    clip: rect(27px, 9999px, 76px, 0); }
  85% {
    clip: rect(37px, 9999px, 59px, 0); }
  90% {
    clip: rect(27px, 9999px, 40px, 0); }
  95% {
    clip: rect(27px, 9999px, 75px, 0); }
  100% {
    clip: rect(13px, 9999px, 25px, 0); } }

@keyframes noise-anim-2 {
  0% {
    clip: rect(89px, 9999px, 15px, 0); }
  5% {
    clip: rect(62px, 9999px, 50px, 0); }
  10% {
    clip: rect(22px, 9999px, 50px, 0); }
  15% {
    clip: rect(60px, 9999px, 63px, 0); }
  20% {
    clip: rect(79px, 9999px, 53px, 0); }
  25% {
    clip: rect(7px, 9999px, 75px, 0); }
  30% {
    clip: rect(70px, 9999px, 52px, 0); }
  35% {
    clip: rect(55px, 9999px, 82px, 0); }
  40% {
    clip: rect(36px, 9999px, 62px, 0); }
  45% {
    clip: rect(17px, 9999px, 21px, 0); }
  50% {
    clip: rect(22px, 9999px, 87px, 0); }
  55% {
    clip: rect(46px, 9999px, 24px, 0); }
  60% {
    clip: rect(45px, 9999px, 70px, 0); }
  65% {
    clip: rect(78px, 9999px, 43px, 0); }
  70% {
    clip: rect(90px, 9999px, 74px, 0); }
  75% {
    clip: rect(100px, 9999px, 42px, 0); }
  80% {
    clip: rect(27px, 9999px, 76px, 0); }
  85% {
    clip: rect(37px, 9999px, 59px, 0); }
  90% {
    clip: rect(27px, 9999px, 40px, 0); }
  95% {
    clip: rect(27px, 9999px, 75px, 0); }
  100% {
<<<<<<< HEAD
    clip: rect(26px, 9999px, 26px, 0); } }
=======
    clip: rect(73px, 9999px, 63px, 0); }
  5% {
    clip: rect(3px, 9999px, 74px, 0); }
  10% {
    clip: rect(48px, 9999px, 72px, 0); }
  15% {
    clip: rect(2px, 9999px, 41px, 0); }
  20% {
    clip: rect(52px, 9999px, 1px, 0); }
  25% {
    clip: rect(91px, 9999px, 8px, 0); }
  30% {
    clip: rect(81px, 9999px, 46px, 0); }
  35% {
    clip: rect(82px, 9999px, 75px, 0); }
  40% {
    clip: rect(43px, 9999px, 27px, 0); }
  45% {
    clip: rect(96px, 9999px, 84px, 0); }
  50% {
    clip: rect(91px, 9999px, 63px, 0); }
  55% {
    clip: rect(85px, 9999px, 10px, 0); }
  60% {
    clip: rect(45px, 9999px, 32px, 0); }
  65% {
    clip: rect(36px, 9999px, 11px, 0); }
  70% {
    clip: rect(1px, 9999px, 90px, 0); }
  75% {
    clip: rect(32px, 9999px, 86px, 0); }
  80% {
    clip: rect(17px, 9999px, 19px, 0); }
  85% {
    clip: rect(10px, 9999px, 52px, 0); }
  90% {
    clip: rect(90px, 9999px, 25px, 0); }
  95% {
    clip: rect(1px, 9999px, 4px, 0); }
  100% {
    clip: rect(32px, 9999px, 93px, 0); } }

@keyframes noise-anim-2 {
  0% {
    clip: rect(73px, 9999px, 63px, 0); }
  5% {
    clip: rect(3px, 9999px, 74px, 0); }
  10% {
    clip: rect(48px, 9999px, 72px, 0); }
  15% {
    clip: rect(2px, 9999px, 41px, 0); }
  20% {
    clip: rect(52px, 9999px, 1px, 0); }
  25% {
    clip: rect(91px, 9999px, 8px, 0); }
  30% {
    clip: rect(81px, 9999px, 46px, 0); }
  35% {
    clip: rect(82px, 9999px, 75px, 0); }
  40% {
    clip: rect(43px, 9999px, 27px, 0); }
  45% {
    clip: rect(96px, 9999px, 84px, 0); }
  50% {
    clip: rect(91px, 9999px, 63px, 0); }
  55% {
    clip: rect(85px, 9999px, 10px, 0); }
  60% {
    clip: rect(45px, 9999px, 32px, 0); }
  65% {
    clip: rect(36px, 9999px, 11px, 0); }
  70% {
    clip: rect(1px, 9999px, 90px, 0); }
  75% {
    clip: rect(32px, 9999px, 86px, 0); }
  80% {
    clip: rect(17px, 9999px, 19px, 0); }
  85% {
    clip: rect(10px, 9999px, 52px, 0); }
  90% {
    clip: rect(90px, 9999px, 25px, 0); }
  95% {
    clip: rect(1px, 9999px, 4px, 0); }
  100% {
    clip: rect(32px, 9999px, 93px, 0); } }
>>>>>>> develop
=======
    clip: rect(13px, 9999px, 25px, 0); } }
>>>>>>> timeline
>>>>>>> develop

.glitch:before {
  content: attr(data-text);
  position: absolute;
  left: -2px;
  text-shadow: 1px 0 lime;
  top: 0;
  color: white;
  background: magenta;
  overflow: hidden;
  clip: rect(0, 900px, 0, 0);
  -webkit-animation: noise-anim-2 3s infinite linear alternate-reverse;
  animation: noise-anim-2 3s infinite linear alternate-reverse; }

header {
  background: #323031 url(../images/bg_dark.jpg); }
  header .header--branding h1 {
    display: block;
    margin: 15px;
    padding: 0;
    width: 90%;
    height: 120px;
    text-indent: -9000px;
    background: url("../images/logo_white.svg") no-repeat center;
    background-size: contain; }
    header .header--branding h1 a {
      height: 100%;
      display: block; }
  header .header--buynow {
    float: right;
    border-color: #fff;
    color: #fff; }
  header #interior-menu {
    text-align: right;
    clear: right; }
    header #interior-menu ul {
      text-align: right; }
      header #interior-menu ul li:last-child a {
        margin-right: 0;
        padding-right: 0px; }

body.home header {
  background: transparent; }

@media only screen and (min-width: 65em) {
  .md-hide-up {
    display: none; } }

@media only screen and (max-width: 65em) {
  .md-hide-up {
    display: block !important; }
  .conf-date {
    padding: 20px; }
    .conf-date p {
      color: #fff;
      font-size: 22px;
      font-weight: bold;
      margin: 0px; }
  body.home header a#nifty-nav-toggle {
    top: 0px !important; }
  body.home header .nifty-panel {
    left: 0;
    width: 100%;
    top: 70px; } }

footer {
  background: #323031 url(../images/bg_dark.jpg);
  background-size: cover;
  color: #fff; }
  footer h2, footer h3, footer h4, footer p, footer a, footer a:visited {
    color: #fff; }
  footer a.social-icon i {
    font-size: 2.5em;
    padding: 4px 15px; }
  footer a {
    cursor: pointer;
    transition: all .2s ease-in; }
  footer a:hover {
    color: #aacf38; }
  footer p a {
    text-decoration: underline; }

/*----------------------------------------------------------------------------
  WordPress Social Menu
  - make sure to include FontAwesome for this to work!
----------------------------------------------------------------------------*/
.menu-social ul {
  text-align: inherit;
  list-style: none;
  padding: 0; }
  .menu-social ul li {
    position: relative;
    display: inline-block;
    padding: 0 .625rem; }
    .menu-social ul li a {
      display: inline-block;
      width: 22px;
      height: 22px;
      border-radius: 10px;
      text-align: center; }
      .menu-social ul li a:before {
        padding-bottom: .25rem;
        display: inline-block;
        vertical-align: middle;
        font-family: 'FontAwesome';
        font-size: .7rem;
        color: red;
        -webkit-font-smoothing: antialiased; }
      .menu-social ul li a:hover {
        font-style: normal; }
    .menu-social ul li a[href*="facebook.com"]::before {
      content: '\f09a'; }
    .menu-social ul li a[href*="twitter.com"]::before {
      content: '\f099'; }
    .menu-social ul li a[href*="dribbble.com"]::before {
      content: '\f17d'; }
    .menu-social ul li a[href*="plus.google.com"]::before {
      content: '\f0d5'; }
    .menu-social ul li a[href*="pinterest.com"]::before {
      content: '\f0d2'; }
    .menu-social ul li a[href*="github.com"]::before {
      content: '\f09b'; }
    .menu-social ul li a[href*="tumblr.com"]::before {
      content: '\f173'; }
    .menu-social ul li a[href*="youtube.com"]::before {
      content: '\f167'; }
    .menu-social ul li a[href*="flickr.com"]::before {
      content: '\f16e'; }
    .menu-social ul li a[href*="vimeo.com"]::before {
      content: '\f194'; }
    .menu-social ul li a[href*="instagram.com"]::before {
      content: '\f16d'; }
    .menu-social ul li a[href*="linkedin.com"]::before {
      content: '\f0e1'; }
    .menu-social ul li a[href*="yelp.com"]::before {
      content: '\f1e9'; }
    .menu-social ul li a[href*="mailto:"]::before {
      content: '\f003'; }

.screen-reader-text {
  display: none; }

@media only screen and (max-width: 640px) {
  .menu-social {
    float: none;
    text-align: center; } }

.left--fixed {
  position: fixed;
  min-height: 100%;
  min-height: 100vh;
  padding: 0 20px;
  width: 32%;
  text-align: center;
  overflow-y: hidden; }
  .left--fixed h1.brand {
    text-indent: -10000px;
    display: block;
    width: 100%;
    height: 200px;
    margin: 100px auto;
    background: url(../images/logo.svg) no-repeat center;
    background-size: contain; }
  .left--fixed h3.aiga {
    text-indent: -10000px;
    display: block;
    height: 100px;
    margin: 50px auto;
    width: 70%;
    background: url(../images/aiga.svg) no-repeat center;
    background-size: contain; }
  .left--fixed h2 {
    color: #fff;
    text-align: center; }

@media screen and (max-width: 47.9375em) {
  .left--fixed {
    position: fixed;
    min-height: 100%;
    min-height: 100vh;
    padding: 0 20px;
    width: 100%;
    text-align: center; }
    .left--fixed h1.brand {
      text-indent: -10000px;
      display: block;
      width: 80%;
      height: 150px;
      margin: 100px auto 50;
      background: url(../images/logo.svg) no-repeat center;
      background-size: contain; }
    .left--fixed h2 {
      font-size: 1.8em !important; }
    .left--fixed h3.aiga {
      text-indent: -10000px;
      display: block;
      height: 70px;
      margin: 50px auto;
      width: 70%;
      background: url(../images/aiga.svg) no-repeat center;
      background-size: contain; } }

/*----------------------------------------------------------------------------
  Core Home Panels
----------------------------------------------------------------------------*/
.panel {
  display: block;
  min-height: 100%;
  min-height: 100vh;
  padding: 15% 8%;
  background-size: cover; }

.panel--dark {
  background: #323031 url(../images/bg_dark.jpg) no-repeat;
  background-size: cover; }

.panel--lime {
  background: #aacf38 url(../images/bg_lime.jpg) no-repeat;
  background-size: cover; }

.shortpanel {
  display: block;
  height: auto;
  padding: 5% 10%;
  background: #fff; }

img.glitch {
  margin: 0 auto 50px;
  display: block;
  width: 300px;
  text-align: center; }

@media screen and (max-width: 47.9375em) {
  .panel {
    height: auto;
    background-size: 100% 100%; }
  .panel.intro {
    margin-top: 100vh; }
  .mobile--dark {
    background: #222 url(../images/bg_dark.jpg) no-repeat;
    background-size: cover; } }

/*----------------------------------------------------------------------------
  Introduction
----------------------------------------------------------------------------*/
.intro h2 {
  color: #aacf38; }

.intro p {
  color: #fff;
  font-size: 20px; }

/*----------------------------------------------------------------------------
  Tickets
----------------------------------------------------------------------------*/
.tickets .text_earlybird {
  margin-bottom: 15px; }

.pricing-table .row {
  margin: 0 0 5px;
  padding: 0; }
  .pricing-table .row .col-5 {
    padding-left: 0px; }

.pricing-table p {
  font-size: 0.95em;
  margin: 0 0 3px; }

/*----------------------------------------------------------------------------
  Email Sign up
----------------------------------------------------------------------------*/
.email form {
  width: 100%;
  text-align: left;
  display: block; }
  .email form input.email {
    text-align: left;
    width: 100%;
    padding: 15px;
    background: none;
    border: 0px;
    border-bottom: 2px #323031 solid; }

/*----------------------------------------------------------------------------
  Speakers
----------------------------------------------------------------------------*/
.speakers h2 {
  color: #fff; }

.speakers p {
  color: #fff;
  font-size: 20px; }

.menu-primary-menu-container {
  text-align: center; }
  .menu-primary-menu-container ul {
    list-style: none;
    margin: 0 auto;
    padding: 0;
    text-align: center; }
  .menu-primary-menu-container li {
    margin: 0 10px;
    padding: 0;
    display: inline-block;
    text-align: center; }
    .menu-primary-menu-container li a, .menu-primary-menu-container li a:visited {
      display: block;
      padding: 10px 20px;
      text-decoration: none;
      color: #aacf38;
      cursor: pointer;
      transition: all .2s ease-in;
      font-weight: bold;
      font-family: "Roboto Condensed";
      text-transform: uppercase; }
    .menu-primary-menu-container li a:hover {
      color: #fff; }

@media only screen and (min-width: 65em) {
  .md-hide-up {
    display: none; } }

.niftyburger {
  height: 75px; }

#nifty-nav-toggle {
  width: 80px;
  height: 100%;
  display: block;
  background: none;
  position: absolute;
  transition: all .3s ease;
  top: 37px;
  right: 20px;
  left: auto; }

#nifty-nav-toggle span {
  cursor: pointer;
  border-radius: 1px;
  height: 3px;
  width: 30px;
  background: #fff;
  position: absolute;
  top: 31px;
  right: 0px;
  left: auto;
  display: block;
  content: ''; }

#nifty-nav-toggle span:before {
  top: -8px;
  right: 0;
  background: #fff; }

#nifty-nav-toggle span:after {
  bottom: -8px;
  top: 8px;
  right: 0;
  background: #fff; }

.nifty-panel {
  left: 0;
  width: 100%;
  top: 150px;
  background: rgba(50, 48, 49, 0.95);
  overflow: hidden;
  display: none; }
  .nifty-panel a.button {
    width: 80%;
    margin: 20px auto;
    display: block;
    float: none;
    text-align: center; }
  .nifty-panel ul {
    list-style: none;
    margin: 20px 0;
    padding: 0;
    width: 100%; }
    .nifty-panel ul li {
      width: 100%;
      margin: 0;
      position: relative; }
      .nifty-panel ul li:hover {
        background: rgba(170, 207, 56, 0.9); }
      .nifty-panel ul li a {
        display: block;
        padding: 8px 15px;
        text-transform: uppercase;
        color: white; }

.button {
  display: inline-block;
  text-transform: uppercase;
  font-family: "Roboto Condensed";
  font-weight: bold;
  padding: 15px;
  color: #323031;
  border: #323031 2px solid;
  background: transparent;
  transition: all 0.2s ease-in;
  margin: 20px 0; }

.button:hover {
  color: #aacf38;
  background: #323031; }

.button.dark-text {
  color: #fff;
  border-color: #fff; }

.button.dark-text:hover {
  background: #aacf38; }

.button.light-text {
  color: #323031;
  border-color: #323031; }

.button.light-text:hover {
  color: #fff;
  background: #323031; }

.button#glitch {
  cursor: pointer;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  position: relative;
  z-index: 2; }

.layers {
  position: absolute;
  top: 0;
  left: 0; }

#layer1 {
  color: #ff00ae;
  z-index: 1; }

#layer2 {
  color: #1bff00;
  z-index: 1; }

.hero {
  min-height: 400px;
  padding: 100px 50px; }
  .hero h1 {
    font-size: 4em; }

@media only screen and (max-width: 40em) {
  .hero {
    min-height: 250px;
    padding: 50px 20px; }
    .hero h1 {
      font-size: 2em; } }

.newsletter {
  background: #aacf38 url(../images/bg_lime.jpg);
  padding: 75px 0; }
  .newsletter #mc_embed_signup input[type="email"] {
    font-size: 20px;
    background: transparent;
    border: none;
    border-bottom: 3px solid #000;
    color: #000;
    width: 100%;
    height: auto;
    padding: 10px;
    margin-top: 28px; }
  .newsletter #mc_embed_signup div.mce_inline_error {
    background: red; }

h4.sponsors--headline {
  border-bottom: 3px solid #ccc;
  padding-bottom: 10px;
  font-size: 16px; }

.gform_body input[type="email"],
.gform_body input[type="text"],
.gform_body textarea {
  font-size: 20px;
  background: transparent;
  border: none;
  border-bottom: 3px solid #000;
  color: #000;
  width: 100%;
  height: auto;
  padding: 10px;
  margin-top: 28px;
  border-radius: 0px; }

/*----------------------------------------------------------------------------
  Plugin Overrides
----------------------------------------------------------------------------*/
body.home header {
  height: 50px;
  z-index: 99; }

.home--video {
  height: 100vh;
  width: 100%;
  position: relative;
  top: -50px;
  overflow: hidden; }
  .home--video video {
    position: absolute;
    top: 50%;
    left: 50%;
    min-width: 100%;
    min-height: 100%;
    width: auto;
    height: auto;
    z-index: -100;
    -webkit-transform: translateX(-50%) translateY(-50%);
    -ms-transform: translateX(-50%) translateY(-50%);
    transform: translateX(-50%) translateY(-50%);
    background: #323031 url(../images/bg_dark.jpg);
    background-size: cover;
    transition: .2s opacity; }
    .home--video video:before {
      content: '';
      display: block;
      position: fixed;
      top: 0;
      left: 0;
      background: #323031 url(../images/bg_dark.jpg);
      background-size: cover;
      width: 100%;
      height: 100%; }
  .home--video .home--overlay {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    background-size: cover !important; }
    .home--video .home--overlay div {
      -webkit-flex: 0 1 auto;
      -ms-flex: 0 1 auto;
      flex: 0 1 auto; }
  .home--video .mobile-only-poster {
    display: none; }

@media only screen and (max-width: 65em) {
  .home--video {
    background: #323031 url(../images/bg_dark.jpg);
    background-size: cover; }
    .home--video .video {
      display: none; }
    .home--video .mobile-only-poster {
      display: block;
      width: 80%;
      height: 100vh;
      min-height: 100%;
      margin: 0px auto;
      background: url(../images/logo_white.svg) no-repeat center;
      background-size: contain; } }

.home--intros {
  padding: 50px 0 70px; }

.about_intro {
  padding: 75px 0; }

.past_speakers {
  background: #323031 url(../images/bg_dark.jpg);
  color: #fff;
  padding: 50px 0; }

.past_speakers ul {
  width: 100%;
  margin: 20px 0;
  padding: 0;
  list-style: none; }
  .past_speakers ul li {
    display: block;
    margin: 0;
    padding: 0 0 10px 0;
    width: 32%;
    float: left;
    text-align: center; }

.meet_team {
  padding: 75px 0; }
  .meet_team p {
    text-align: center; }
  .meet_team ul {
    width: 100%;
    margin: 20px 0;
    padding: 0;
    list-style: none; }
    .meet_team ul li {
      display: block;
      margin: 0;
      padding: 0 0 10px 0;
      width: 48%;
      float: left;
      text-align: center; }

@media only screen and (max-width: 40em) {
  .past_speakers ul li,
  .meet_team ul li {
    width: 100%;
    float: none; } }

.speakerthumbgrid {
  background: #323031 url(../images/bg_dark.jpg);
  padding: 50px 0; }
  .speakerthumbgrid h2 {
    color: #fff; }

.speakerthumb .profilepic img {
  /*
		-webkit-filter: grayscale(1);
		filter: grayscale(1);
*/
  opacity: 0.55;
  transition: all 0.2s ease-in; }

.speakerthumb a {
  color: #aacf38; }

.speakerthumb a:hover {
  color: #fff; }
  .speakerthumb a:hover .profilepic img {
    opacity: 1; }

.speakerthumb h4 {
  margin-bottom: 0px; }

.speakerthumb p {
  margin-top: 5px; }

.breakoutthumbgrid .speakerthumb a {
  color: #000; }

.breakoutthumbgrid .speakerthumb a:hover {
  color: #aacf38; }

.mmconf_hero {
  background: #323031 url(../images/bg_dark.jpg);
  color: #fff; }
  .mmconf_hero .button {
    color: #fff;
    border-color: #aacf38; }

.conf-content {
  padding: 100px 0; }

.tesimonial {
  background: #111 url(../images/photos/bparker_mm_sunday-56.jpg) center center no-repeat;
  background-size: cover;
  padding: 300px 0;
  color: #fff; }

.join-us {
  background: #eee url(../images/bg_white.jpg);
  padding: 75px 0; }
  .join-us .joincontent {
    padding-right: 50px; }

.pricegrid {
  padding: 75px 0; }

.studentsplit {
  background: #323031 url(../images/bg_dark.jpg);
  background-size: cover;
  padding: 120px 0;
  color: #fff; }
  .studentsplit .button {
    color: #fff;
    border-color: #aacf38; }

.cd-container {
  /* this class is used to give a max-width to the element it is applied to, and center it horizontally when it reaches that max-width */
  width: 90%;
  max-width: 65em;
  margin: 0 auto; }
  .cd-container::after {
    /* clearfix */
    content: '';
    display: table;
    clear: both; }

#cd-timeline {
  position: relative;
  padding: 2em 0;
  margin-top: 2em;
  margin-bottom: 2em; }
  #cd-timeline::before {
    /* this is the vertical line */
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    height: 100%;
    width: 4px;
    background: #ccc; }
    @media only screen and (max-width: 65em) {
      #cd-timeline::before {
        display: none; } }

.cd-timeline-block {
  position: relative;
  margin: 2em 0; }
  .cd-timeline-block::after {
    clear: both;
    content: "";
    display: table; }
  .cd-timeline-block:first-child {
    margin-top: 0; }
  .cd-timeline-block:last-child {
    margin-bottom: 0; }
  @media only screen and (min-width: 65em) {
    .cd-timeline-block {
      margin: 4em 0; }
      .cd-timeline-block:first-child {
        margin-top: 0; }
      .cd-timeline-block:last-child {
        margin-bottom: 0; } }

.cd-timeline-img {
  position: absolute;
  top: 0;
  left: 0;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: #000; }
  @media only screen and (max-width: 65em) {
    .cd-timeline-img {
      display: none; } }
  .cd-timeline-img img {
    display: block;
    width: 24px;
    height: 24px;
    position: relative;
    left: 50%;
    top: 50%;
    margin-left: -12px;
    margin-top: -12px; }
  @media only screen and (min-width: 65em) {
    .cd-timeline-img {
      width: 60px;
      height: 60px;
      left: 50%;
      margin-left: -30px;
      /* Force Hardware Acceleration in WebKit */
      -webkit-transform: translateZ(0);
      -webkit-backface-visibility: hidden; } }

.cd-timeline-content {
  position: relative;
  background: #eee;
  padding: 1em;
  box-shadow: 0 3px 1px #ccc; }
  .cd-timeline-content::after {
    clear: both;
    content: "";
    display: table; }
  .cd-timeline-content .cd-read-more, .cd-timeline-content .cd-date {
    display: inline-block; }
  .cd-timeline-content p {
    margin: 1em 0;
    line-height: 1.6; }
  .cd-timeline-content .cd-read-more {
    float: right;
    padding: .8em 1em;
    background: #333;
    color: #fff; }
    .no-touch .cd-timeline-content .cd-read-more:hover {
      background-color: #aacf38; }
  .cd-timeline-content .cd-date {
    float: left;
    padding: .8em 0;
    opacity: .7; }
  .cd-timeline-content::before {
    content: '';
    position: absolute;
    top: 16px;
    right: 100%;
    height: 0;
    width: 0;
    border: 7px solid transparent;
    border-right: 7px solid #333; }
    @media only screen and (max-width: 65em) {
      .cd-timeline-content::before {
        display: none; } }
  @media only screen and (max-width: 65em) {
    .cd-timeline-content .cd-date {
      display: inline;
      float: none; } }
  @media only screen and (min-width: 65em) {
    .cd-timeline-content {
      margin-left: 0;
      padding: 1.6em;
      width: 45%; }
      .cd-timeline-content::before {
        top: 24px;
        left: 100%;
        border-color: transparent;
        border-left-color: #333; }
      .cd-timeline-content .cd-read-more {
        float: left; }
      .cd-timeline-content .cd-date {
        position: absolute;
        width: 100%;
        left: 122%;
        top: 6px;
        font-size: 16px; }
      .cd-timeline-block:nth-child(even) .cd-timeline-content {
        float: right; }
        .cd-timeline-block:nth-child(even) .cd-timeline-content::before {
          top: 24px;
          left: auto;
          right: 100%;
          border-color: transparent;
          border-right-color: #333; }
        .cd-timeline-block:nth-child(even) .cd-timeline-content .cd-read-more {
          float: right; }
        .cd-timeline-block:nth-child(even) .cd-timeline-content .cd-date {
          left: auto;
          right: 122%;
          text-align: right; }
      .cssanimations .cd-timeline-content.is-hidden {
        visibility: hidden; }
      .cssanimations .cd-timeline-content.bounce-in {
        visibility: visible;
        -webkit-animation: cd-bounce-2 0.6s;
        animation: cd-bounce-2 0.6s; } }

@-webkit-keyframes cd-bounce-2 {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-100px); }
  60% {
    opacity: 1;
    -webkit-transform: translateX(20px); }
  100% {
    -webkit-transform: translateX(0); } }

@keyframes cd-bounce-2 {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-100px);
    -ms-transform: translateX(-100px);
    transform: translateX(-100px); }
  60% {
    opacity: 1;
    -webkit-transform: translateX(20px);
    -ms-transform: translateX(20px);
    transform: translateX(20px); }
  100% {
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0); } }

@-webkit-keyframes cd-bounce-2-inverse {
  0% {
    opacity: 0;
    -webkit-transform: translateX(100px); }
  60% {
    opacity: 1;
    -webkit-transform: translateX(-20px); }
  100% {
    -webkit-transform: translateX(0); } }

@keyframes cd-bounce-2-inverse {
  0% {
    opacity: 0;
    -webkit-transform: translateX(100px);
    -ms-transform: translateX(100px);
    transform: translateX(100px); }
  60% {
    opacity: 1;
    -webkit-transform: translateX(-20px);
    -ms-transform: translateX(-20px);
    transform: translateX(-20px); }
  100% {
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0); } }

.sponsorcontent {
  background: #323031 url(../images/bg_dark.jpg);
  color: #fff;
  padding: 75px 0; }

.levels ul.sponsor--tiers {
  margin: 0;
  padding: 0;
  list-style: square; }
  .levels ul.sponsor--tiers li {
    width: 48%;
    float: left;
    display: block;
    margin: 0;
    padding: 20px; }
    .levels ul.sponsor--tiers li .vol_description .button {
      display: none; }
  .levels ul.sponsor--tiers li:nth-child(2n+1) {
    clear: left; }
  .levels ul.sponsor--tiers:after {
    clear: both;
    display: block;
    content: ''; }
  .levels ul.sponsor--tiers .vol_description ul {
    width: 90%;
    margin: 0;
    padding: 0;
    list-style: square !important; }
  .levels ul.sponsor--tiers .vol_description li {
    margin: 0px 0px 10px 10px;
    padding: 5px;
    list-style: square;
    width: 45%;
    display: inline-block; }

.home-sponsor {
  background: #323031 url(../images/bg_dark.jpg);
  color: #fff;
  padding: 75px 0; }
  .home-sponsor .button {
    color: #fff;
    border-color: #aacf38; }

@media only screen and (max-width: 40em) {
  .levels ul.sponsor--tiers {
    margin: 0;
    padding: 0;
    list-style: square; }
    .levels ul.sponsor--tiers li {
      width: 100%;
      float: left;
      display: block;
      margin: 0;
      padding: 20px; }
      .levels ul.sponsor--tiers li .vol_description .button {
        display: none; }
      .levels ul.sponsor--tiers li .vol_description li {
        width: 100%; } }

.volcontent {
  background: #323031 url(../images/bg_dark.jpg);
  color: #fff;
  padding: 75px 0; }

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> develop
.upcoming--list {
  background: #323031 url(../images/bg_dark.jpg);
  padding: 50px 10px; }
  .upcoming--list .event-card {
    padding: 25px; }
    .upcoming--list .event-card p {
      color: #fff; }
    .upcoming--list .event-card ul.event-categories {
      margin: 0;
      padding: 0; }
      .upcoming--list .event-card ul.event-categories li {
        list-style: none;
        display: inline-block;
        margin: 0;
        padding: 0 10px;
        border-right: 1px solid #ccc; }
        .upcoming--list .event-card ul.event-categories li:last-of-type {
          border-right: 0px; }

.single--event {
  margin-bottom: 50px; }

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> develop
=======
<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> timeline
>>>>>>> develop
